#ifndef ECC_ENCRYPTION_ALGORITHM_H_
#define ECC_ENCRYPTION_ALGORITHM_H_

#include<string>

class EccEncryption
{
public:
// This method is used to generate keys for ECC encryption algorithm
    ///
        ///  \param[in]  uiKeySize, length of key
            /// \param[out]  sPrivateKey, private key
                /// \param[out]  sPublicKey, public key
                    void GenerateEccKeys(unsigned int uiKeySize, std::string& sPrivateKey, std::string& sPublicKey);

                        /// This method is used to encrypt the input message using public key
                            ///
                                ///  \param[in]  sPublicKey, public key generated by the first method
                                    /// \param[out]  sMsgToEncrypt, message to encryppt
                                        /// \return  the message encrypted using the input public key
                                            std::string Encrypt(const std::string& sPublicKey, const std::string& sMsgToEncrypt);

                                                /// This method is used to decrypt the input message using private key
                                                    ///
                                                        /// \param[in] sPrivateKey, private key used to decrypt the cipher text
                                                            /// \param[in] sMsgToDecrypt, cipher text used to decrypt to get the plain text
                                                                /// \return decrypted plain text
                                                                    std::string Decrypt(const std::string& sPrivateKey, const std::string& sMsgToDecrytp);
                                                                    }; 
                                                                    #endif
